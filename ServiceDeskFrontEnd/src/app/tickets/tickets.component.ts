import { TicketService } from './../ticket.service';

import { Ticket } from './../ticket';
import { Component, OnInit } from '@angular/core';
import { FormGroup, NgForm } from '@angular/forms';

@Component({
  selector: 'app-tickets',
  templateUrl: './tickets.component.html',
  styleUrls: ['./tickets.component.css'],
})
export class TicketsComponent implements OnInit {

  //Ticket HDTS-315
  GenerateRandomTicketValues = function (): string {
    let resultValue = 'TS00';
    let possible = '0123456789';
    for (var i = 0; i < 5; i++)
      resultValue += possible.charAt(
        Math.floor(Math.random() * possible.length)
      );
    console.log(resultValue);
    return resultValue;
  };
  autoGeneratedTicketValue = this.GenerateRandomTicketValues();


  tickets: Ticket[] = [];
  constructor(private ticketservice: TicketService) {}

  ngOnInit(): void {
    this.getTickets();
  }

  getTickets(): void {
    this.ticketservice
      .getTickets()
      .subscribe((tickets) => (this.tickets = tickets));
  }

  add(form: NgForm): void {
    let newticket: Ticket = {
      id: 0,
      ticketName: form.form.value.ticketName,
      openedBy: form.form.value.openedBy,
      status: false,
      issue: form.form.value.issue,
    };
    this.ticketservice.addNewTicket(newticket).subscribe((response: any) => {
      console.log(response);
      form.reset();
      this.getTickets();
      window.location.reload();
    });
  }

  bookmark(ticket: Ticket): void {
    this.ticketservice.bookmarkATicket(ticket.id).subscribe((response: any) => {
      console.log(response);
    });
  }

  delete(ticket: Ticket): void {
    this.tickets = this.tickets.filter((t) => t !== ticket);
    this.ticketservice.deleteTicket(ticket.id).subscribe();
  }
}
